From c48da0abb6253e3a436851ef18b14a01f08717a5 Mon Sep 17 00:00:00 2001
From: anagarwa <anagarwa@adobe.com>
Date: Sun, 13 Mar 2022 09:17:28 +0530
Subject: [PATCH] sites-4700

---
 .../helper/image/WebOptimizedHelper.java      | 95 +++++++++++++++++++
 .../internal/models/v1/ImageImpl.java         |  5 +-
 .../internal/models/v2/ImageImpl.java         | 10 +-
 .../image/DefaultDMImageDeliveryImpl.java     |  2 +-
 4 files changed, 106 insertions(+), 6 deletions(-)

diff --git a/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/helper/image/WebOptimizedHelper.java b/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/helper/image/WebOptimizedHelper.java
index e41e1cbf..6643ee1e 100644
--- a/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/helper/image/WebOptimizedHelper.java
+++ b/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/helper/image/WebOptimizedHelper.java
@@ -1,7 +1,102 @@
 package com.adobe.cq.wcm.core.components.internal.helper.image;
 
+import org.apache.commons.lang3.StringUtils;
+import org.jetbrains.annotations.NotNull;
+
 public class WebOptimizedHelper {
 
+    private String DM_DELIVERY_BASE_URL = "/adobe/api/dynamicmedia.deliver";
+
+    private String QUESTION_SYMBOL = "?";
+
+    private String EQUAL_SYMBOL = "=";
+
+    private String AND_SYMBOL = "&";
+
+    private int DEFAULT_WIDTH = 800;
+
+    private int DEFAULT_QUALITY = 75;
+
+    private String WIDTH_PARAMETER = "w";
+
+    private String QUALITY_PARAMETER = "q";
+
+    private String PATH_PARAMETER = "path";
+
+    private String CROP_PARAMETER = "c";
+
+    private String ROTATE_PARAMETER = "r";
+
+    private String FLIP_PARAMETER = "flip";
+
+    private String SIZE_PARAMETER = "sz";
+
+
+
+    private String assetPath;
+    private int width = DEFAULT_WIDTH;
+    private int quality = DEFAULT_QUALITY;
+    private String cropParameter;
+    private int rotate =0;
+    private String[] imageFormat;
+    private String seoName;
+
+    public WebOptimizedHelper(@NotNull String assetPath) {
+        this.assetPath = assetPath;
+    }
+    public WebOptimizedHelper(@NotNull String assetPath, @NotNull int width, @NotNull int quality, String cropParameter, int rotate, String[] imageFormat, String seoName) {
+        this.assetPath = assetPath;
+        this.width = width;
+        this.quality = quality;
+        this.cropParameter = cropParameter;
+        this.rotate = rotate;
+        this.imageFormat = imageFormat;
+        if (this.imageFormat.length == 0) {
+            this.imageFormat = new String[]{"jpeg"};
+        }
+        this.seoName = seoName;
+    }
+
+    public void setAssetPath(String assetPath) {
+        this.assetPath = assetPath;
+    }
+
+    public void setWidth(int width) {
+        this.width = width;
+    }
+
+    public void setQuality(int quality) {
+        this.quality = quality;
+    }
+
+    public void setCropParameter(String cropParameter) {
+        this.cropParameter = cropParameter;
+    }
+
+    public void setRotate(int rotate) {
+        this.rotate = rotate;
+    }
+
+    public void setImageFormat(String[] imageFormat) {
+        this.imageFormat = imageFormat;
+    }
+
+    public void setSeoName(String seoName) {
+        this.seoName = seoName;
+    }
+
+    public String getUrl() {
+        StringBuilder stringBuilder = new StringBuilder(DM_DELIVERY_BASE_URL + QUESTION_SYMBOL +  WIDTH_PARAMETER + EQUAL_SYMBOL + width +
+                                                            AND_SYMBOL + QUALITY_PARAMETER + EQUAL_SYMBOL + quality);
+
+        if (!StringUtils.isEmpty(cropParameter)) {
+            stringBuilder.append(AND_SYMBOL + CROP_PARAMETER + EQUAL_SYMBOL + cropParameter);
+        }
+
+        if (rotate != 0) {
+            stringBuilder.append(AND_SYMBOL + ROTATE_PARAMETER + EQUAL_SYMBOL + rotate);
+        }
 
+    }
 
 }
diff --git a/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/models/v1/ImageImpl.java b/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/models/v1/ImageImpl.java
index d930f565..7aece596 100644
--- a/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/models/v1/ImageImpl.java
+++ b/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/models/v1/ImageImpl.java
@@ -28,6 +28,7 @@ import javax.json.Json;
 import javax.json.JsonArrayBuilder;
 import javax.json.JsonObjectBuilder;
 
+import com.adobe.cq.wcm.core.components.services.image.DMImageDelivery;
 import com.adobe.cq.wcm.core.components.util.AbstractComponentImpl;
 import org.apache.commons.io.FilenameUtils;
 import org.apache.commons.lang3.CharEncoding;
@@ -97,10 +98,6 @@ public class ImageImpl extends AbstractComponentImpl implements Image {
     @Source("osgi-services")
     protected MimeTypeService mimeTypeService;
 
-    @Inject
-    @Source("osgi-services")
-    protected MimeTypeService mimeTypeService;
-
 
     @Self
     protected LinkHandler linkHandler;
diff --git a/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/models/v2/ImageImpl.java b/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/models/v2/ImageImpl.java
index e928175d..9a8058c9 100644
--- a/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/models/v2/ImageImpl.java
+++ b/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/models/v2/ImageImpl.java
@@ -20,12 +20,15 @@ import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
 import javax.annotation.PostConstruct;
+import javax.inject.Inject;
 
+import com.adobe.cq.wcm.core.components.services.image.DMImageDelivery;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.sling.api.SlingHttpServletRequest;
 import org.apache.sling.api.resource.Resource;
 import org.apache.sling.models.annotations.Exporter;
 import org.apache.sling.models.annotations.Model;
+import org.apache.sling.models.annotations.Source;
 import org.apache.sling.models.annotations.injectorspecific.InjectionStrategy;
 import org.apache.sling.models.annotations.injectorspecific.ValueMapValue;
 import org.jetbrains.annotations.NotNull;
@@ -68,6 +71,10 @@ public class ImageImpl extends com.adobe.cq.wcm.core.components.internal.models.
     @Nullable
     protected String smartCropRendition;
 
+    @Inject
+    @Source("osgi-services")
+    protected DMImageDelivery dmImageDelivery;
+
     protected boolean useWebOptimizedService = false;
 
     /**
@@ -207,8 +214,9 @@ public class ImageImpl extends com.adobe.cq.wcm.core.components.internal.models.
                         dmImageUrl = dmServerUrl + dmAssetName;
                     } else if (useWebOptimizedService && (!hasContent)
                                 // && extra conditions from service
+                                && dmImageDelivery.isWebOptimizedImageDeliveryAllowed()
                                 ) {
-                        src
+                        src = dmImageDelivery.get
 
 
                     }
diff --git a/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/services/image/DefaultDMImageDeliveryImpl.java b/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/services/image/DefaultDMImageDeliveryImpl.java
index 47efe18b..862ca194 100644
--- a/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/services/image/DefaultDMImageDeliveryImpl.java
+++ b/bundles/core/src/main/java/com/adobe/cq/wcm/core/components/internal/services/image/DefaultDMImageDeliveryImpl.java
@@ -6,7 +6,7 @@ import org.osgi.service.component.annotations.Component;
 @Component(
     service = DMImageDelivery.class,
     property = {
-        org.osgi.framework.Constants.SERVICE_RANKING + ":Integer=" +Integer.MIN_VALUE;
+        org.osgi.framework.Constants.SERVICE_RANKING + ":Integer=" +Integer.MIN_VALUE
     }
 )
 public class DefaultDMImageDeliveryImpl implements DMImageDelivery {
-- 
2.27.0.windows.1

